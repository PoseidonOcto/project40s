~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Everything that needs to be done
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
DEADLINE: week 11

1. Finish the misinformation detection:
    (a) update manual detection 
            (note: should display the new fact down bottom right, otherwise adds no utility).
        change to pull from database and store to database.
        Add url of triggering text.

    (b) display recently found differently
        display facts found as the hi fidelity design describes.


2. Complete the database:
    store all fields necessary for misinformation detection:

        Table 1 (fact data):                    COMPOSITE_KEY: "id of user" and "id of claim".
            id of user that detected claim  (number)
            id of claim in vector database  (number)
            url of triggering text          (string [can be huge])
            triggering text                 (string [can be huge])
            date that text was triggered    (number: milliseconds past epoch)

        Table 2 (user interaction data):        COMPOSITE_KEY: "id of user" and "url".
            id of user                      (number)
            url of website                  (string)
                // url will be clipped to host site i.e. "www.cnn.com" not "www.cnn.com/politics"
            duration spent on that website  (number)
            date spent duration on website  (number: milliseconds past epoch)
                // yes this means a seperate entry each time they flick back
                // could decide only get database entry if more than 30 seconds spent
            clicks during duration          (number)

        Table 3 (political leaning data):       PRIMARY_KEY: "url"
            url of website                  (string)
            political leaning of website    (ENUM)

3. Complete the user interaction data collection:
    Accurately track duration user spent on website and clicks.
    Send data to database (when pushing a new url, also push the political leaning read from csv)

4. Complete the dashboard:
    (a) Complete the hifi design
    (b) Complete the graphs
        
        Graph 1 [the graph shown in hifi dashboard]:
            Date versus duration spent online
                Appliable filters / modes (buttons at bottom of graph):
                    Can narrow the graph to a specific time region  (i.e. from 3pm june 23rd to 6pm june 23rd)

                    Can filter by website                           (i.e. only show duration spent on instagram)
                            â†• (mutually exclusive)
                    Can toggle displaying as a *stacked bar chart* 
                        (three modes)
                        - Each block is a different website
                        - Each block is a different political leaning
                            (i.e. a single bar could consist of blocks with "slightly left leaning", "center", and 'extremely right leaning")
                        - The aforementioned modes, both active at the same time.

                        If a block is too small just add to 'other' block.
                            
5. Miscellaneous css:
    change education page to match hifi design
    fix up popup
    make the css scale well (it is going to be displayed on a monitor at the expo)

6. Complete user surveys:
    (a) Complete interview questions regarding usability
    (b) Conduct interviews (requires 1-5 done)

7. Website recommendation page:
    (a) Review response from professor.
        Review user surveys.
        Compile list of websites from findings (if enough data).
    (b) Build website recommendation page.

!!! (new item) !!!!
8. Onboarding:
    A video explaining how to use the extension (requires 1-7 done).
        Will be opened upon extension installation.
        Probably just a youtube video would be easiest.
    User must consent to data being tracked.

9. Update privacy policy

10. Miscellaneous
    dashboard should be selected by default on sidebar
    finish settings page
    add user profile icon on the sidebar
    create new OPENAI api key (last one is in commit history of a repo that might be public in future)


11. Work on report

Optional: Publish extension to the chrome store


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Assigned Tasks (midsem)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Alex:               1 & 6a
Jackie:             2 & 3
Angela & Sunny:     4a
Aryan:              4b
Jaspreet:           5 & 7b

Unassigned (requiring other tasks to be complete): 6b, 7a, 8, 9, 10

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Assigned Tasks (week 10)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
DUE BY TUESDAY WEEK 11

Alex:               1a
Jackie:             2 & 3
Angela & Sunny:     6b & 11
Aryan:              4b
Jaspreet:           1b & 10 & 7b

Done: 6a, 5
Unassigned (requiring other tasks to be complete): 7a, 8, 9

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Assigned Tasks (week 11)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Jaspreet:           8



~~~~~~~~~~~~~~~~~~~~~~~~~~~
Note for meeting (deletable)
~~~~~~~~~~~~~~~~~~~~~~~~~~~
On 4(b), we still have to do:
    Make x axis more readable (remove year unless needed?)
    Allow option aggregating time spent on all websites
    Stacked bar chart modes
    Website buttons should be named nicely 
        (i.e. CNN instead of edition.cnn.com; the actual website url could go below in small text)
    Better date input - hifi version would be best, but maybe like railway with advanced option if we can't.
    Move website filters below graph. Handle website filters scrolling off page.

On 5, we still have to do:
    Scaling needs some work
        Headings should probably be centered at least on wide screens.
        See issue with text escaping box.
    All body text should probably be in white boxes
    Text should probably not stretch so far horizontally
    Numbers should be slightly bigger
    Second level indent unnecessary


~~~~~~~~~~~~~~~~~~~
Done list
~~~~~~~~~~~~~~~~~~~
1.
        allow setting fact check sensitivity in options
        remove any claims referencing 'videos' or 'images'.
